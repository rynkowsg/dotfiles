#!/usr/bin/env bash

# Inspirations:
# - https://github.com/aterreno/macosx-from-scratch/blob/master/Brewfile
# - https://github.com/bkuhlmann/mac_os-config/blob/main/bin/install_homebrew_formulas
# - https://github.com/bkuhlmann/mac_os-config/blob/main/bin/install_homebrew_casks

set -x

# https://unix.stackexchange.com/a/152714
SCRIPT_DIR="$(cd "$(dirname "$([ -L "$0" ] && readlink "$0" || echo "$0")")" || exit 1; pwd -P)"
ROOT_DIR="$(cd "${SCRIPT_DIR}/../.." || exit 1; pwd -P)"

# install common apps/deps
sh "${ROOT_DIR}/lib/macos/install_common"

#####################
###     SHELL     ###
#####################

# SHELLS
brew install bash bash-completion zsh zsh-completion              # install bash & zsh
function add_shell {
  local path="$1"
  if ! grep -q "${path}" /etc/shells; then
    sudo bash -c "echo \"${path}\" >> /etc/shells"
  fi
}
BASH_PATH="$(brew --prefix)/bin/bash"; add_shell "${BASH_PATH}" # add bash
ZSH_PATH="$(brew --prefix)/bin/zsh";   add_shell "${ZSH_PATH}"  # add zsh
[[ "${SHELL}" != "${ZSH_PATH}" ]] && chsh -s "${ZSH_PATH}"      # change default
echo "SHELL: $SHELL"

# git
brew install svn
brew install git git-lfs git-gui git-cola tig pre-commit

# gpg
brew install gnupg pinentry-mac gpa

# GNU utils
brew install coreutils ed findutils gawk gnu-sed gnu-tar grep make
# it requires PATH update at platformrc
#     export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
#     export PATH="/usr/local/opt/ed/libexec/gnubin:$PATH"
#     export PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"
#     export PATH="/usr/local/opt/gawk/libexec/gnubin:$PATH"
#     export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
#     export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"
#     export PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"
#     export PATH="/usr/local/opt/make/libexec/gnubin:$PATH"

# common CLI utils
{
  brew install asciidoc asciidoctor
  # asciidoctor **/*.adoc
  # fswatch -o **/*.adoc | xargs -n1 -I{} asciidoctor **/*.adoc
}
brew install autojump       # shell navigation

brew install curl
brew install exiftool
brew install fswatch
brew install fzf            # custom Ctrl+R completion
brew install jq
brew install htop
brew install httpie
brew install mc
brew install openssh
brew install prettyping
brew install pv             # data's progress through a pipe
# https://thoughtbot.github.io/rcm/rcm.7.html
# https://thoughtbot.github.io/rcm/rcrc.5.html
brew install rcm
brew install rlwrap
brew install speedtest-cli
brew install tmux
# TODO: install tmux plugins
# https://github.com/smudge/dotfiles/blob/master/setup.sh#L20
brew install tree
{
  brew install vim
  curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  vim +PlugInstall +PlugClean! +qall
}
brew install weechat        # messenger
# https://github.com/whalebrew/whalebrew
brew install whalebrew      # For dockerizing commands
brew install wget
brew install youtube-dl

# languages / envs
brew install python
brew install ruby
# clojure
brew install clojure
brew install leiningen
brew install borkdude/brew/babashka
{
  # tfenv - for terraform, globally and locally in projects
  brew install tfenv
  tfenv install
  # Terraform checkers
  brew install tfsec checkov
}
{
  # Java & jenv setup
  brew install jenv
  mkdir -p "${HOME}/.jenv/bin"
  export PATH="${HOME}/.jenv/bin:${PATH}"
  SHELL_OPTS="${-}"; [[ $SHELL_OPTS == *x* ]] && echo "Disable xtrace feature for the 'jenv init'" && set +x
  eval "$(jenv init -)"
  [[ $SHELL_OPTS == *x* ]] && set -x
  jenv enable-plugin export
  jenv enable-plugin maven
  brew tap adoptopenjdk/openjdk
  printf "%s\n" "List of available adoptopenjdk:"
  brew search adoptopenjdk
  brew install                          \
    adoptopenjdk/openjdk/adoptopenjdk8  \
    adoptopenjdk/openjdk/adoptopenjdk11 \
    adoptopenjdk/openjdk/adoptopenjdk12 \
    adoptopenjdk/openjdk/adoptopenjdk13 \
    adoptopenjdk/openjdk/adoptopenjdk14 \
    adoptopenjdk/openjdk/adoptopenjdk15 \
    adoptopenjdk/openjdk/adoptopenjdk16
#    adoptopenjdk/openjdk/adoptopenjdk9  \
#    adoptopenjdk/openjdk/adoptopenjdk10 \
    # apple complains about these two that they
    # "cannot be opened because the developer cannot be verified"
    # that message happen when I try to add then to jenv
  printf "%s\n" "List of JavaVirtualMachines:"
  ls -l /Library/Java/JavaVirtualMachines/
  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
#  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-9.jdk/Contents/Home
#  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-10.jdk/Contents/Home
  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home
  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-12.jdk/Contents/Home
  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-13.jdk/Contents/Home
  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-14.jdk/Contents/Home
  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-15.jdk/Contents/Home
  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home
  printf "%s\n" "jenv versions:"
  jenv versions
  jenv shell 16
  # Links:
  # - https://kenanhancer.com/2020/05/09/how-to-install-java-with-brew-and-jenv/
  # - https://developer.bring.com/blog/configuring-jenv-the-right-way/
}
{
  # nvm - to use npm/node only in JS projects locally
  brew install nvm && mkdir -p ~/.nvm
  SHELL_OPTS="${-}"; [[ $SHELL_OPTS == *x* ]] && echo "Disable xtrace feature for the 'nvm' setup" && set +x
  [ -s "$(brew --prefix)/opt/nvm/nvm.sh" ] && . "$(brew --prefix)/opt/nvm/nvm.sh"
  nvm install --lts
  [[ $SHELL_OPTS == *x* ]] && set -x
}
{
  # yarn - to use npm packages installed globally
  brew install yarn
  yarn global add serverless
  yarn global add npx
}

# Virtualization / containerization
brew install --cask virtualbox
{
  brew install --cask docker
  ! command -v docker > /dev/null && open /Applications/Docker.app
}

# cloud
brew install awscli
brew install circleci
brew install --cask google-cloud-sdk

# audio / video / graphics
brew install ffmpeg libav
brew install asciinema      # https://asciinema.org/
brew install graphviz
brew install imagemagick
brew install imageoptim-cli

# macos control
brew install smudge/smudge/nightlight   # managing night shift feature
brew install duti                       # assigning apps for file extensions

#######################
###    NON-SHELL    ###
#######################

# Fonts
brew tap homebrew/cask-fonts
brew install --cask font-roboto
brew install --cask font-fira-code font-fira-mono
brew install --cask font-hack
brew install --cask font-iosevka

# IDEs / Editors
brew install --cask emacs
brew install --cask intellij-idea pycharm webstorm

# Other developer tools
brew install --cask dash        # documentations
brew install --cask imageoptim
brew install --cask iterm2      # terminal
brew install --cask meld

# Non-developer tools
brew install --cask alfred        # keyboard launcher
open /Applications/Alfred\ 4.app
brew install --cask rescuetime    # time tracker
brew install --cask sloth         # GUI for lsof
brew install --cask spectacle     # organising windows using shortcuts
brew install --cask turbo-boost-switcher
# https://apps.apple.com/gb/app/tadam-stay-focused-at-work/id531349534?mt=12
mas install 531349534             # tadam - stay focused-at-work

# Non-developer apps
brew install --cask discord
