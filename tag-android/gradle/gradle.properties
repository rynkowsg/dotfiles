#
# https://docs.gradle.org/current/userguide/build_environment.html
#
# Helper CLI cmds:
# ./gradlew properties - show all properties
# ./gradlew --status   - show currently running daemons
# ./gradlew --stop     - stop a daemon

# Use gradle deamon so it doesn't have to init itself every time we use gradle
org.gradle.daemon=true

#org.gradle.jvmargs=-Xmx8192m -XX:+UseParallelGC
org.gradle.jvmargs=\
  -Xmx4g \
  -XX:MaxMetaspaceSize=512m \
  -Dfile.encoding=UTF-8 \
  -XX:+UseParallelGC \
  -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=build/oom.hprof \
  -XX:+UnlockDiagnosticVMOptions \
  -XX:+PrintConcurrentLocks

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
#org.gradle.parallel=true
org.gradle.parallel=true

# When set to true, Gradle will reuse task outputs from any previous build, when possible, resulting is much faster builds.
# https://docs.gradle.org/current/userguide/build_cache.html#build_cache
org.gradle.caching=true

# When enabled, the Configuration Cache can greatly increase build performance.
# However, for large and complex builds, storing and loading cache entries can
# still incur a noticeable overhead. To address this, storing and loading of
# the Configuration Cache can now be performed in parallel, resulting in better
# performance in case of both cache misses and hits.
org.gradle.configuration-cache.parallel=true

org.gradle.debug=false
#org.gradle.console=verbose
#org.gradle.logging.level=info
#org.gradle.warning.mode=all

#kotlin.daemon.jvmargs=-Xmx1500m -Xms=500m -XX:+UseParallelGC
