;; The deps.edn file describes the information needed to build a classpath.
;;
;; When using the `clojure` or `clj` script, there are several deps.edn files
;; that are combined:
;; - install-level
;; - user level (this file)
;; - project level (current directory when invoked)
;;
;; For all attributes other than :paths, these config files are merged left to right.
;; Only the last :paths is kept and others are dropped.

{;; Paths
 ;; Directories in the current project to include in the classpath
 :paths
 ["src"]

 ;; External dependencies
 :deps
 {}

 ;; Aliases
 ;;   resolve-deps aliases (-R) affect dependency resolution, options:
 ;;     :extra-deps - specifies extra deps to add to :deps
 ;;     :override-deps - specifies a coordinate to use instead of that in :deps
 ;;     :default-deps - specifies a coordinate to use for a lib if one isn't found
 ;;   make-classpath aliases (-C) affect the classpath generation, options:
 ;;     :extra-paths - vector of additional paths to add to the classpath
 ;;     :classpath-overrides - map of lib to path that overrides the result of resolving deps
 :aliases
 #:g{;; pull in specific versions of Clojure:
     :v1.0
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.0.0"}}}
     :v1.1
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.1.0"}}}
     :v1.2
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.2.1"}}}
     :v1.3
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.3.0"}}}
     :v1.4
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.4.0"}}}
     :v1.5
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.5.1"}}}
     :v1.6
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.6.0"}}}
     :v1.7
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.7.0"}}}
     :v1.8
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.8.0"}}}
     :v1.9
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.9.0"}}}
     :v1.10.0
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.10.0"}}}
     :v1.10.1
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.10.1"}}}
     :v1.10.2
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.10.2"}}}
     :v1.10.3
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.10.3"}}}
     :v1.10
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.10.3"}}}
     :v1.11
     {:override-deps {org.clojure/clojure ^:antq/exclude {:mvn/version "1.11.3"}}}

     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     ;; REPL / nREPL / REBL
     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

     :dev
     {:extra-paths ["src" "dev" "test" "res" "resources" "."]
      :extra-deps  {babashka/fs {:mvn/version "0.5.25"}
                    camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.3"}
                    cljc.java-time/cljc.java-time              {:mvn/version "0.1.18"}
                    clj-http/clj-http {:mvn/version "3.13.0"}
                    com.clojure-goes-fast/clj-async-profiler {:mvn/version "1.6.1"} ;; https://github.com/clojure-goes-fast/clj-async-profiler
                    com.clojure-goes-fast/clj-java-decompiler {:mvn/version "0.3.7"} ;; https://github.com/clojure-goes-fast/clj-java-decompiler
                    com.clojure-goes-fast/clj-memory-meter {:mvn/version "0.4.0"} ;; https://github.com/clojure-goes-fast/jvm-hiccup-meter
                    com.clojure-goes-fast/jvm-alloc-rate-meter {:mvn/version "0.1.4"} ;; https://github.com/clojure-goes-fast/jvm-alloc-rate-meter
                    com.crypticbutter/snoop                    {:mvn/version "21-353-alpha"}
                    com.taoensso/timbre {:mvn/version "6.7.0"}
                    criterium/criterium                        {:mvn/version "0.4.6"}
                    integrant/integrant {:mvn/version "0.13.1"}
                    javax.servlet/servlet-api                  {:mvn/version "2.5"}   ;; required for ring/ring-core, https://github.com/ring-clojure/ring#upgrade-notice
                    fipp/fipp {:mvn/version "0.6.27"}
                    kixi/stats {:mvn/version "0.5.7"}
                    org.slf4j/slf4j-nop {:mvn/version "2.0.17"}
                    meander/epsilon                            {:mvn/version "0.0.650"}
                    dev.weavejester/medley {:mvn/version "1.8.1"}
                    metosin/malli {:mvn/version "0.17.0"}
                    net.cgrand/xforms {:mvn/version "0.19.6"}
                    nubank/matcher-combinators {:mvn/version "3.9.1"}
                    org.babashka/sci {:mvn/version "0.9.45"} ; for malli and fn serialization
                    org.clojure/clojure {:mvn/version "1.12.0"}
                    org.clojure/core.async {:mvn/version "1.8.741"}
                    org.clojure/data.csv {:mvn/version "1.1.0"}
                    org.clojure/data.zip {:mvn/version "1.1.0"}
                    org.clojure/test.check                     {:mvn/version "1.1.1"}
                    org.clojure/tools.deps.alpha {;; https://github.com/clojure/tools.deps.alpha/tree/add-lib3
                                                  :git/url "https://github.com/clojure/tools.deps.alpha"
                                                  :sha "e4fb92eef724fa39e29b39cc2b1a850567d490dd"}
                    prismatic/plumbing {:mvn/version "0.6.0"}
                    ring/ring-core {:mvn/version "1.14.1"}
                    rynkowsg/tapic {:git/url "https://github.com/rynkowsg/tapic.git" :sha "928d3547c7fffdac877b2358743ce9567e9275c3"}
                    selmer/selmer {:mvn/version "1.12.62"}
                    tick/tick {:mvn/version "1.0"}
                    wing/wing {:mvn/version "0.1.4"}}}
     ; Example usage:
     ;(comment
     ;  (require '[clojure.tools.deps.alpha.repl :refer [add-libs] :as deps-repl])
     ;  (deps-repl/libs)
     ;  (deps-repl/current-basis)
     ;  (add-libs '{babashka/fs {:mvn/version "0.4.19"}
     ;              clj-commons/fs {:mvn/version "1.6.309"}}))

     ;; start a modern nREPL server on a random available port
     :nrepl
     {:extra-deps {nrepl/nrepl {:mvn/version "1.3.1"}}
      :main-opts  ["-m" "nrepl.cmdline"]}

     ;; start a Rebel REPL
     :rebel
     {:extra-deps {; https://github.com/bhauman/rebel-readline
                   com.bhauman/rebel-readline {:mvn/version "0.1.5"}}
      :main-opts  ["-m" "rebel-readline.main"]}

     ;; start nREPL server & Rebel
     :rebel-nrepl
     {:extra-deps {nrepl/nrepl {:mvn/version "1.3.1"}
                   com.bhauman/rebel-readline {:mvn/version "0.1.5"}}
      :main-opts  ["--main" "nrepl.cmdline" "--interactive"
                   "--repl-fn" "rebel-readline.main/-main"]}

     :portal
     {:extra-deps {djblue/portal {:mvn/version "0.59.0"}}}

     ;; start REBL
     :rebl-8
     {:extra-deps {org.clojure/core.async {:mvn/version "1.8.741"}
                   ;; deps for file datafication (REBL 0.9.149 or later)
                   org.clojure/data.csv {:mvn/version "1.1.0"}
                   org.clojure/data.json {:mvn/version "2.5.1"}
                   org.yaml/snakeyaml {:mvn/version "2.4"}
                   ;; assumes you've installed the latest Cognitect dev-tools:
                   com.cognitect/rebl ^:antq/exclude {:mvn/version "0.9.245"}}
      :main-opts  ["-m" "cognitect.rebl"]}

     ;; start REBL on JVM 11
     :rebl-11
     {:extra-deps {org.clojure/core.async {:mvn/version "1.8.741"}
                   ;; deps for file datafication (REBL 0.9.149 or later)
                   org.clojure/data.csv {:mvn/version "1.1.0"}
                   org.clojure/data.json {:mvn/version "2.5.1"}
                   org.yaml/snakeyaml {:mvn/version "2.4"}
                   ;; assumes you've installed the latest Cognitect dev-tools:
                   com.cognitect/rebl ^:antq/exclude {:mvn/version "0.9.245"}
                   ;; JavaFX deps
                   org.openjfx/javafx-fxml ^:antq/exclude {:mvn/version "15-ea+6"}
                   org.openjfx/javafx-controls ^:antq/exclude {:mvn/version "15-ea+6"}
                   org.openjfx/javafx-swing ^:antq/exclude {:mvn/version "15-ea+6"}
                   org.openjfx/javafx-base ^:antq/exclude {:mvn/version "15-ea+6"}
                   org.openjfx/javafx-web ^:antq/exclude {:mvn/version "15-ea+6"}
                   ;; nREPL middleware
                   com.github.rynkowsg/nrebl.middleware {:mvn/version "0.4.0"}}
      :main-opts ["-m" "cognitect.rebl"]}

     :rebl-17
     {:extra-paths ["app/rebl/src"]
      :extra-deps {org.clojure/core.async {:mvn/version "1.8.741"}
                   ;; deps for file datafication (REBL 0.9.149 or later)
                   org.clojure/data.csv {:mvn/version "1.1.0"}
                   org.clojure/data.json {:mvn/version "2.5.1"}
                   org.yaml/snakeyaml {:mvn/version "2.4"}
                   ;; assumes you've installed the latest Cognitect dev-tools:
                   com.cognitect/rebl ^:antq/exclude {:mvn/version "0.9.245"}
                   ;; JavaFX deps
                   org.openjfx/javafx-fxml ^:antq/exclude {:mvn/version "17"}
                   org.openjfx/javafx-controls ^:antq/exclude {:mvn/version "17"}
                   org.openjfx/javafx-swing ^:antq/exclude {:mvn/version "17"}
                   org.openjfx/javafx-base ^:antq/exclude {:mvn/version "17"}
                   org.openjfx/javafx-web ^:antq/exclude {:mvn/version "17"}
                   ;; nREPL middleware
                   com.github.rynkowsg/nrebl.middleware {:mvn/version "0.4.0"}}
      :main-opts ["-m" "cognitect.rebl"]}

     :morse
     {:extra-deps {io.github.nubank/morse {:git/tag "v2023.10.06.02" :git/sha "88b5ff7"}
                   pl.rynkowski/morse-nrepl {:git/url "https://github.com/rynkowsg/morse-nrepl.git"
                                             :git/branch "master"
                                             :git/sha "acfc3293f2c3869ddfa7b39e414f5638923fabc7"}}}

     :morse-run
     {:extra-deps {io.github.nubank/morse {:git/tag "v2023.10.06.02" :git/sha "88b5ff7"}
                   pl.rynkowski/morse-nrepl {:git/url "https://github.com/rynkowsg/morse-nrepl.git"
                                             :git/branch "master"
                                             :git/sha "acfc3293f2c3869ddfa7b39e414f5638923fabc7"}}
      :jvm-opts ["-Dpl.rynkowski.repl-runner.morse-autostart=true"]}

     :clerk
     {:extra-deps  {io.github.nextjournal/clerk {:mvn/version "0.17.1102"}}}

     ;; start smart REPL runner
     :repl
     {:extra-deps {rynkowsg/repl-runner                 {:git/url "https://github.com/rynkowsg/repl-runner"
                                                         :git/branch "master"
                                                         :git/sha "cbdd31519cac3dec29793e3a554619988e44990a"}}
      :jvm-opts   ["-XX:-OmitStackTraceInFastThrow"]
      ;; this ensures we have a DynamicClassLoader, which is needed for
      ;; add-lib to work, if we're starting other processes via aliases
      ;; such as a socket REPL or Cognitect's REBL etc
      :main-opts  ["-e" "(->>(Thread/currentThread)(.getContextClassLoader)(clojure.lang.DynamicClassLoader.)(.setContextClassLoader,(Thread/currentThread)))"
                   "-m" "pl.rynkowski.repl-runner"]}

     :sc {:extra-deps {vvvvalvalval/scope-capture {:mvn/version "0.3.3"}}}

     ;; For printing ascii tables from data
     ;; https://github.com/cldwalker/table
     :table {:extra-deps {table/table {:mvn/version "0.5.0"}}}

     ;; https://github.com/stuarthalloway/reflector
     :reflector {:extra-deps {stuarthalloway/reflector {:git/url   "https://github.com/stuarthalloway/reflector.git"
                                                        :sha       "93a0c19b4526c1180959e940202928d35e5c3cef"}}}

     :charles
     {:jvm-opts ["-Djava.net.preferIPv4Stack=true"
                 ;; https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html
                 "-DproxySet=true" "-DproxyHost=127.0.0.1" "-DproxyPort=8888"
                 "-DsocksProxyHost=127.0.0.1" "-DsocksProxyPort=8889"
                 "-Dhttp.proxyHost=127.0.0.1" "-Dhttp.proxyPort=8888"
                 "-Dhttps.proxyHost=127.0.0.1" "-Dhttps.proxyPort=8888"
                 ;; socks proxy for non-http connections
                 ;; proxy all, including localhost (by default localhost is not proxied)
                 "-Dhttp.nonProxyHosts="]}

     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     ;; PROJECT
     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

     :poly
     {:extra-deps {polylith/clj-poly {:git/url "https://github.com/polyfy/polylith.git"
                                      :sha "6144c816d813f"
                                      :deps/root "projects/poly"}}
      :main-opts ["-m" "polylith.clj.core.poly-cli.core"]}

     ;; create a new project
     ;; e.g.
     ;;
     ;;  clojure -X:g/clj-new :template io.github.kit-clj :name rynkowsg/demo-kit
     ;;
     :tool.clj-new
     {:extra-deps {;; https://clojars.org/seancorfield/clj-new
                   com.github.seancorfield/clj-new {:mvn/version "1.3.415"}}
      :exec-fn    clj-new/create}

     ;; clj -M:g/antq --upgrade
     :tool.antq
     {:replace-paths []
      :replace-deps {com.github.liquidz/antq {:mvn/version "2.11.1276"}
                     org.slf4j/slf4j-nop {:mvn/version "2.0.17"}}
      :main-opts ["-m" "antq.core"]}

     ;; Example of clj-kondo setup
     ;; https://github.com/wilkerlucio/pathom-viz/tree/master/.clj-kondo
     :tool.clj-kondo
     {:replace-deps {clj-kondo/clj-kondo {:mvn/version "2025.04.07"}}
      :main-opts ["-m" "clj-kondo.main"]}

     :tool.cljfmt
     {:replace-deps {dev.weavejester/lein-cljfmt {:mvn/version "0.13.1"}}}

     ;; - see https://github.com/rm-hull/nvd-clojure
     ;; - clojure -M:g/nvd "" "$(clojure -Spath -A:any:aliases)"
     :tool.nvd {:extra-deps {nvd-clojure/nvd-clojure {:mvn/version "5.0.0"}}
                :main-opts ["-m" "nvd.task.check"]}

     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     ;; BUILDING
     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

     ;; Uberjar archive of the project, including Clojure runtime
     ;; clojure -X:project/uberjar :main-class domain.application
     ;; clojure -X:project/uberjar :jar '"project-name.jar"' :main-class domain.application
     :uberjar
     {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.1.303"}}
      :exec-fn      hf.depstar/uberjar
      :exec-args    {:jar        "target/uberjar.jar"
                     :main-class calc.core
                     :aot        true
                     :compile-ns :all}}

     ; pack.alpha - tool for uberjar'ing
     ; ---
     ; It turns out that depstar (https://github.com/seancorfield/depstar) and
     ; uberdeps (https://github.com/tonsky/uberdeps) don't work with Duct.
     ; The problem is described here: https://github.com/duct-framework/duct/issues/92
     ; Alternative to pack.alpha is using `lein uberjar`, but since I don't want to integrate
     ; Leiningen only for uberjars, I decided to go with pack.alpha.
     ; FYI: "Capsule project is dead"
     ; - https://github.com/juxt/pack.alpha/issues/88
     ; - https://github.com/puniverse/capsule/issues/134
     ; Capsule docs:
     ; https://web.archive.org/web/20191207104737/http://www.capsule.io/
     :pack
     {:extra-deps {pack/pack.alpha {:git/url "https://github.com/juxt/pack.alpha.git"
                                    :sha     "9fd4a63ddeec3bedcbc819422de5a40ccb9eb8c9"}}}}

 ;; Provider attributes
 :mvn/repos
 {"central"             {:url "https://repo1.maven.org/maven2/"}
  "clojars"             {:url "https://repo.clojars.org/"}
  "sonatype"            {:url "https://oss.sonatype.org/content/repositories/snapshots/"}
  "cognitect-dev-tools" {:url "https://dev-tools.cognitect.com/maven/releases/"}}}

;; find deps
;; https://github.com/practicalli/clojure-deps-edn/blob/live/deps.edn#L393
