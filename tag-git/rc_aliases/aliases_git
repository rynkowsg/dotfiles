#!/usr/bin/env sh

# debug log
printf "reading: %s\t\t\t($0)\n" "aliases_git" >> ~/.dotfiles_log

alias g="git"

alias gbr-current="git rev-parse --abbrev-ref HEAD"

alias gbr-current-push="git push -u origin HEAD:\$(gbr-current)"

# impl here: ~/.git/bin/git-close-branch
# inspired by: https://github.com/agross/dotfiles/commit/453bde6218b3e483beade7860acb8730d76a30ae
#alias gbr-close="git close-branch"
# TODO: it doesn't seem to work
alias gbr-close="~/.git/bin/git-close-branch"

alias glo-master="git lo origin/master..master"

git_commit_with_date_described() {
  local desc="${1}"; shift;
  local new_date="$(date --date "${desc}")}";
  GIT_AUTHOR_DATE="${new_date}" GIT_COMMITTER_DATE="${new_date}" git commit --date "${new_date}" "$@";
}
alias git-commit-with-date-described=git_commit_with_date_described

# HOWTO change author of N commits:
# git rebase -i HEAD~4 -x "git commit --amend --author 'Author Name <author.name@mail.com>' --no-edit"
# eg.
# git rebase -i HEAD~4 -x "git commit --amend --author 'Greg Rynkowski <5878299+rynkowsg@users.noreply.github.com>' --no-edit"
# git rebase -i --root -x "git commit --amend --author 'Greg Rynkowski <5878299+rynkowsg@users.noreply.github.com>' --no-edit"
# Source: https://stackoverflow.com/questions/4981126/how-to-amend-several-commits-in-git-to-change-author/31669789#31669789

alias gl="git lo"
alias glgg="git lgg"
alias gf="git fetch -p origin"
alias gs="git status"
alias glom="git lo origin/master..master"
alias glmo="git lo master..origin/master"
alias gpcb="git push -u origin HEAD:\$(gbr-current)"

alias git-clone-naked="GIT_CLONE_PROTECTION_ACTIVE=false git clone"

alias git-root-path="git rev-parse --show-toplevel"
