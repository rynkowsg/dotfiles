#!/usr/bin/env sh

# debug log
printf "reading: %s\t\t\t($0)\n" "aliases" >> ~/.dotfiles_log
# includes
. ~/.dotfiles.envs                          # DOTFILES_BASE_PATH
. "${DOTFILES_BASE_PATH}/.lib/source_utils" # source_parts_safe

# shellcheck disable=SC2139

###############################################################################
# General                                                                     #
###############################################################################

# Enable aliases to be sudoâ€™ed
alias sudo='sudo '

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec ${SHELL} -l"

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# whereis
# https://www.unix.com/shell-programming-and-scripting/131832-how-find-duplicate-commands-search-path.html
alias whereis='find `printenv PATH | sed "s/:/ /g"`  -maxdepth 1  -name'
alias whereis2='type -a'

###############################################################################
# Navigation                                                                  #
###############################################################################

# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"

# Shortcuts
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias src="cd ~/Sources"

###############################################################################
# ls                                                                          #
###############################################################################

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
	export LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
else # macOS `ls`
	colorflag="-G"
	export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, excluding . and ..
alias la="ls -lAF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

###############################################################################
# Include all ~/.rc_aliases/*                                                 #
###############################################################################

source_parts_safe "$HOME/.rc_aliases"

###############################################################################
# MacOS                                                                       #
###############################################################################

alias remaining_battery="pmset -g batt"

###############################################################################
# UI apps                                                                     #
###############################################################################

alias cola="git-cola &"
alias dag="git-dag &"

###############################################################################
# Misc                                                                        #
###############################################################################

# https://coderwall.com/p/oaaqwq/pbcopy-on-ubuntu-linux
#alias pbcopy="xclip -sel clip"

weather() { curl wttr.in/$1; }

alias my-youtube-dl="yt-dlp -o '%(uploader)s/%(upload_date)s_%(title)s.%(ext)s' --restrict-filenames --continue --no-overwrites --write-description --write-info-json --write-annotations --write-all-thumbnails --sub-format srt --write-sub --sub-lang en,pl"
alias my-speedtest='speedtest | tee ~/OneDrive/Logs/speedtest/"$(date "+%Y%m%d_%H%m%S")-$(uname -n).txt"'

# change git origin
change-git-remote() {
  local origin="${1}"
  local from="${2}"
  local to="${3}"
  local new_remote="$(git remote -v      |\
    grep "${origin}" |\
    head -n 1        |\
    awk '{print $2}' |\
    sed "s/$2/$3/")"
  git remote set-url "${origin}" "${new_remote}"
}

alias veracrypt="/Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt --text"
alias pip-search="${HOME}/.bin/pypy-search.sh"
alias pip-uninstall-all="pip freeze | xargs pip uninstall -y"

alias dns-reset="sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder"

alias yk-info="ykman openpgp info; gpg --card-status"
alias passtwo="PASSWORD_STORE_DIR=${HOME}/.password-store/twobuffers pass"
alias passcha="PASSWORD_STORE_DIR=${HOME}/.password-store/chargedup pass"
alias pass-here='PASSWORD_STORE_DIR=. pass'

# examples how to parse AWS credentials from CSV directly to pass:
# cat new_user_credentials.csv | tail -n 1 | tr "," "\n" | tail -n 3 | head -n 1 | passtwo insert --echo aws/greg/AWS_ACCESS_KEY_ID
# cat new_user_credentials.csv | tail -n 1 | tr "," "\n" | tail -n 2 | head -n 1 | passtwo insert --echo aws/greg/AWS_SECRET_ACCESS_KEY

function onedrive-fix-filenames() (
  cd /Users/greg/.dotfiles/.lib/clj/
  clj -M -m onedrive-filenames-correction $@
)
alias onedrive-fix-filenames-dryrun='onedrive-fix-filenames --dry-run'

alias clj-repl="JENV_VERSION=oracle64-1.8.0.321 clj -M:g/dev:g/nrepl:g/rebl-8:g/repl"

alias count-kt-lines="find . -name '*.kt' | grep -v build | xargs wc -l"
alias count-clj-lines="find -regextype sed -regex '.*\.\(clj\|cljc\|cljs\)' | grep -v .clj-kondo | xargs wc -l"

alias pidcat-VB53217C21057='pidcat -s VB53217C21057 -w 50 servedup.terminal.dev -i "LeakCanary|System.out|StripeTerminal|FirebaseApp|FirebaseInstanceId|FA|Sentry|Intercom|OpenGLRenderer|arg|NativeCrypto|MemoryHeapBase|libc|SoundPoolThread|ACodec|NuMediaExtractor|Utils|OMXClient|art|WindowClient|PhoneWindow|Choreographer|ProgramBinary/Service|Surface|libEGL|IMGSRV|PerfService|RenderThread|InputMethodManager|OpenSSLLib|ActivityThread|ViewConfigCompat|DrmManagerClient(Native)|ViewRootImpl|DynamiteModule|DynamiteLoaderImpl|System|ApplicationLoaders|ConnectivityManager"'
alias pidcat-VB53217C20096='pidcat -s VB53217C20096 -w 50 servedup.terminal.dev -i "LeakCanary|System.out|StripeTerminal|FirebaseApp|FirebaseInstanceId|FA|Sentry|Intercom|OpenGLRenderer|arg|NativeCrypto|MemoryHeapBase|libc|SoundPoolThread|ACodec|NuMediaExtractor|Utils|OMXClient|art|WindowClient|PhoneWindow|Choreographer|ProgramBinary/Service|Surface|libEGL|IMGSRV|PerfService|RenderThread|InputMethodManager|OpenSSLLib|ActivityThread|ViewConfigCompat|DrmManagerClient(Native)|ViewRootImpl|DynamiteModule|DynamiteLoaderImpl|System|ApplicationLoaders|ConnectivityManager"'

alias dot-reinstall="${DOTFILES_PATH}/.internal/install"
alias dot-update="~/.dotfiles/.internal/update"
alias dot-sync="~/.dotfiles/.internal/sync"
alias dot-log="tail -F ~/.dotfiles_log"

alias ssl-preview-pem="openssl x509 -text -in"

# https://www.cyberciti.biz/faq/how-to-find-my-public-ip-address-from-command-line-on-a-linux/
alias ip-public-address="dig +short myip.opendns.com @resolver1.opendns.com"

_tmp_dir() {
  local path="./.tmp/$(date +%Y-%m-%d)"
  /usr/bin/mkdir -p "${path}"
  echo "${path}"
}

tmp-dir() {
  local path=$(_tmp_dir)
  echo "Tmp dir: ${path}"
}
cd-tmp-dir() {
  local path=$(_tmp_dir)
  echo "Tmp dir: ${path}"
  cd "${path}"
}

gif_to_png() {
  local filepath="$1"
  if [[ ! -f "$filepath" ]]; then
    echo "File not found: $filepath"
    return 1
  fi

  local dir=$(dirname "$filepath")
  local filename=$(basename -- "$filepath")
  local name="${filename%.*}"

  ffmpeg -i "$filepath" "${dir}/${name}_%03d.png"
}
