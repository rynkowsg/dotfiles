#!/usr/bin/env sh

# shellcheck disable=SC2139

###############################################################################
# General                                                                     #
###############################################################################

# Enable aliases to be sudoâ€™ed
alias sudo='sudo '

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec ${SHELL} -l"

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# whereis
# https://www.unix.com/shell-programming-and-scripting/131832-how-find-duplicate-commands-search-path.html
alias whereis='find `printenv PATH | sed "s/:/ /g"`  -maxdepth 1  -name'
alias whereis2='type -a'

###############################################################################
# Navigation                                                                  #
###############################################################################

# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"

# Shortcuts
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias src="cd ~/Sources"

###############################################################################
# ls                                                                          #
###############################################################################

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
	export LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
else # macOS `ls`
	colorflag="-G"
	export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, excluding . and ..
alias la="ls -lAF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

###############################################################################
# Android                                                                     #
###############################################################################

# $1 - package name
adb_apk_pull() {
  local pkgname=$1
  mkdir -p "$pkgname"
  adb pull "$(adb shell pm path $pkgname | awk -F':' '{print $2}')" "${pkgname}/"
}
# Short:
#export NAME=com.amazon.kindle;  mkdir -p "$NAME"; adb pull "$(adb shell pm path $NAME | awk -F':' '{print $2}')" "${NAME}/"

alias adb_top_activity="adb shell dumpsys window windows | grep -E 'mCurrentFocus|mFocusedApp'"

alias adb_screencap='NAME="screencap-$(date "+%Y%m%d_%H%m%S").png"; adb shell mkdir -p /sdcard/DCIM/Screenshots/;  adb shell mkdir -p "/sdcard/DCIM/Screenshots"; adb shell screencap "/sdcard/DCIM/Screenshots/${NAME}"; adb pull "/sdcard/DCIM/Screenshots/${NAME}" .'
alias adb_screenrecord='NAME="screenrecord-$(date "+%Y%m%d_%H%m%S").mp4"; adb shell mkdir -p /sdcard/DCIM/Screenshots/; echo "When finished call:\n    adb pull /sdcard/DCIM/Screenshots/${NAME} .\n"; adb shell screenrecord --verbose --bit-rate 20000000 "/sdcard/DCIM/Screenshots/${NAME}"; '


alias adb_apk_list="adb shell pm list packages"

alias sdkmanager="JAVA_HOME=/Users/greg/.jenv/versions/1.8 sdkmanager"

###############################################################################
# MacOS                                                                       #
###############################################################################

alias remaining_battery="pmset -g batt"

###############################################################################
# git                                                                         #
###############################################################################

alias gbr-current="git rev-parse --abbrev-ref HEAD"

alias gbr-current-push="git push -u origin HEAD:\$(gbr-current)"

# impl here: ~/.git/bin/git-close-branch
# inspired by: https://github.com/agross/dotfiles/commit/453bde6218b3e483beade7860acb8730d76a30ae
#alias gbr-close="git close-branch"
# TODO: it doesn't seem to work
alias gbr-close="~/.git/bin/git-close-branch"

alias glo-master="git lo origin/master..master"

git_commit_with_date_described() {
  local desc="${1}"; shift;
  local new_date="$(date --date "${desc}")}";
  GIT_AUTHOR_DATE="${new_date}" GIT_COMMITTER_DATE="${new_date}" git commit --date "${new_date}" "$@";
}
alias git-commit-with-date-described=git_commit_with_date_described

# HOWTO change author of N commits:
# git rebase -i HEAD~4 -x "git commit --amend --author 'Author Name <author.name@mail.com>' --no-edit"
# Source: https://stackoverflow.com/questions/4981126/how-to-amend-several-commits-in-git-to-change-author/31669789#31669789

###############################################################################
# UI apps                                                                     #
###############################################################################

alias cola="git-cola &"
alias dag="git-dag &"

###############################################################################
# Misc                                                                        #
###############################################################################

# https://coderwall.com/p/oaaqwq/pbcopy-on-ubuntu-linux
#alias pbcopy="xclip -sel clip"

weather() { curl wttr.in/$1; }

alias my-youtube-dl="yt-dlp -o '%(uploader)s/%(upload_date)s_%(title)s.%(ext)s' --restrict-filenames --continue --no-overwrites --write-description --write-info-json --write-annotations --write-all-thumbnails --sub-format srt --write-sub --sub-lang en,pl"
alias my-speedtest='speedtest | tee ~/OneDrive/Logs/speedtest/"$(date "+%Y%m%d_%H%m%S")-$(uname -n).txt"'

# change git origin
change-git-remote() {
  local origin="${1}"
  local from="${2}"
  local to="${3}"
  local new_remote="$(git remote -v      |\
    grep "${origin}" |\
    head -n 1        |\
    awk '{print $2}' |\
    sed "s/$2/$3/")"
  git remote set-url "${origin}" "${new_remote}"
}

alias veracrypt="/Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt --text"
alias pip-search="${HOME}/.bin/pypy-search.sh"
alias pip-uninstall-all="pip freeze | xargs pip uninstall -y"

alias dns-reset="sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder"

alias gpg-discover-yubikey='gpg-connect-agent "scd serialno" "learn --force" /bye'
alias gpg-agent-restart="gpg-connect-agent /bye; gpgconf --launch gpg-agent"
alias gpg-restart="gpgconf --kill all"
alias gpg-kill="gpg-connect-agent /bye; gpgconf --kill all"
alias yk-info="ykman openpgp info; gpg --card-status"
alias passryn="PASSWORD_STORE_DIR=${HOME}/.password-store/rynkowski pass"
alias passtwo="PASSWORD_STORE_DIR=${HOME}/.password-store/twobuffers pass"
alias passcha="PASSWORD_STORE_DIR=${HOME}/.password-store/chargedup pass"

# examples how to parse AWS credentials from CSV directly to pass:
# cat new_user_credentials.csv | tail -n 1 | tr "," "\n" | tail -n 3 | head -n 1 | passtwo insert --echo aws/greg/AWS_ACCESS_KEY_ID
# cat new_user_credentials.csv | tail -n 1 | tr "," "\n" | tail -n 2 | head -n 1 | passtwo insert --echo aws/greg/AWS_SECRET_ACCESS_KEY
